group: edge
dist: trusty

language: java
jdk:
 - oraclejdk8
 - openjdk8

env:
  global:
    TERM=dumb

install: true
before_install:
  - sudo apt update

  # install docker-compose
  - sudo apt install -y python-pip curl jq libxml2-utils
  - sudo pip install docker-compose
  - sudo usermod -aG docker $(whoami)

  # kill whatever running on ports
  - sudo kill $(sudo lsof -t -i:5672) | true
  - sudo kill $(sudo lsof -t -i:5432) | true
  - lsof -i tcp:27017 | awk 'NR!=1 {print $2}' | xargs kill | true
  - sudo kill $(sudo lsof -t -i:27017) | true

  - sudo kill $(sudo lsof -t -i:9200) | true
  - sudo kill $(sudo lsof -t -i:9300) | true
  - sudo kill $(sudo lsof -t -i:5601) | true

  - sudo kill $(sudo lsof -t -i:8001) | true
  - sudo kill $(sudo lsof -t -i:8002) | true
  - sudo kill $(sudo lsof -t -i:8080) | true
  - sudo kill $(sudo lsof -t -i:8081) | true
  - sudo kill $(sudo lsof -t -i:80) | true

script:
  # build docs
  - bash gradlew clean build

  # build all
  - export ROOT=$PWD

#  - >
#    for path in \
#      key-value \
#      elastic \
#      data-event-listener \
#      jpa-data-rest \
#      reactive-redis-webflux \
#      derby-create-drop \
#      querydsl \
#      reactive-data \
#      spel \
#      redis \
#    ; do
#
#      export res="$ROOT/$path"
#      echo $res
#      cd $res
#      bash gradlew clean build
#
#    done;

  - >
    for path in \
      key-value \
    ; do

      export res="$ROOT/$path"
      echo $res
      cd $res
      bash gradlew clean build -Ddocker=compose-travis

    done;

  # 5. key-value
  - cd $ROOT/key-value
  - bash gradlew assemble
  - bash gradlew bootRun &
  - sleep 15
  - curl http://localhost:8080/ | jq
  - sudo kill $(sudo lsof -t -i:8080) | killall -9 java | true

  # 4. elastic
  - cd $ROOT/elastic
  - bash gradlew assemble composeUp -Ddocker=compose-travis-all
  - curl http://localhost/
  - curl http://localhost:8001/
  - curl http://localhost:8001/users
  - curl -u elastic:changeme http://localhost:9200/_cat/health
  - bash gradlew composeDown -Ddocker=compose-travis-all

  # 3. querydsl:
  - cd "$ROOT/querydsl"
  - bash gradlew clean test build

  # querydsl: test and build
  - docker-compose -f soaptest/rest-service/src/docker/docker-compose.yml up -d --build
  - docker-compose -f soaptest/rest-service/src/docker/docker-compose.yml down -v
  - docker-compose -f soaptest/ws-service/src/docker/docker-compose.yml up -d --build
  - docker-compose -f soaptest/ws-service/src/docker/docker-compose.yml down -v

  # querydsl: run rest
  - bash gradlew :docker:dockerUp
  - sudo mkdir -p /var/rest-service
  - sudo mv -f services/rest-service/build/libs/*.jar /var/rest-service/rest-service.jar
  - sudo ln -s /var/rest-service/rest-service.jar /etc/init.d/rest-service
  - sudo service rest-service start

  # querydsl: manual rest api tests
  - sleep 15
  - curl -sS localhost:8080/api/v1/domains | jq
  - curl -sS localhost:8080/api/v2/flatten/2 | jq
  - curl -sS localhost:8080/api/v2/flatten | jq
  - curl -sS localhost:8080/api/v2/sorted\?sort=id,desc | jq
  - curl -sS localhost:8080/api/v2/pagination\?page=0\&size=1\&sort=first.firstField1,desc | jq
  - curl -sS localhost:8080/api/v3/predicate | jq
  - curl -sS localhost:8080/api/v3/predicate\?second.secondField1=1 | jq
  - curl -sS localhost:8080/api/v3/predicate\?createdDate=$(date +%Y-%m-%d) | jq
  - curl -sS localhost:8080/api/v4/engineers | jq
  - curl -sS localhost:8080/api/v4/engineers\?size=2\&page=0\&sort=username,desc | jq
  - curl -sS localhost:8080/api/v4/engineers/any\?emails=u1@com,u3@mail.com | jq
  - curl -sS localhost:8080/api/v4/engineers/any\?emails=u3@mail.com,u2.1@mail.com | jq
  - curl -sS localhost:8080/rest/domains -H'content-type:application/json' -d '{"firstName":"1","lastName":"1","username":"1"}' | jq '._links.self'
  - curl -sS localhost:8080/rest/domains -H'content-type:application/json' -d '{"firstName":"2","lastName":"2","username":"2"}' | jq '._links.self'
  - curl -sS localhost:8080/rest/otherDomains -H'content-type:application/json' -d '{"test":"1"}' | jq '._links.self'
  - curl -sS localhost:8080/rest/histories | jq '.page.totalElements'
  - curl -sS localhost:8080/rest/engineers -H'content-type:application/json' -d '{"username":"tttest"}' | jq '._links.self'
  - curl -sS localhost:8080/rest/histories | jq '.page.totalElements'
  - curl -sS localhost:8080/api/v5/engineers/page-info -H'accept:application/json' | jq
  - curl -sS localhost:8080/api/v6 | jq
  - curl -sS localhost:8080/api/v6/catalog | jq
  - curl -sS localhost:8080/api/v6/catalog\?size=1 | jq
  - curl -sS localhost:8080/api/v6/enum-collection/TEST_ENTITY_1 | jq
  - curl -sS localhost:8080/api/v6/enum-collection/TEST_ENTITY_2 | jq
  - curl -sS localhost:8080/api/v6/enum-collection/not-found | jq
  - curl -sS localhost:8080/api/v6/map-catalog/type/not-found | jq
  - curl -sS localhost:8080/api/v6/map-catalog/type/TEST_ENTITY_2 | jq
  - curl -sS localhost:8080/api/v6/map-catalog/status/NOK | jq
  - curl -sS localhost:8080/api/v6/map-catalog/status/OK | jq
  - curl -sS localhost:8080/api/v6/map-catalog/status/OK\?size=1 | jq
  - curl -sS localhost:8080/api/v6/jpa-enum | jq
  - curl -sS localhost:8080/api/v6/jpa-enum\?size=1 | jq
  - sudo service rest-service stop
  - bash gradlew :docker:dockerDown

  # querydsl: run ws
  - bash gradlew :docker:dockerUp
  - sudo mkdir -p /var/ws-service
  - sudo mv -f services/ws-service/build/libs/*.jar /var/ws-service/ws-service.jar
  - sudo ln -s /var/ws-service/ws-service.jar /etc/init.d/ws-service
  - sudo service ws-service start
  - sleep 15
  - curl --header "content-type:text/xml" -d @services/ws-service/src/test/resources/request.xml http://localhost:8080/ws | xmllint --format -
  - sudo service ws-service stop
  - bash gradlew :docker:dockerDown

  # querydsl: run SoapUI tests
  - bash gradlew clean assemble soaptestRest soaptestWs
  - bash gradlew clean assemble testrunner
  - bash gradlew --stop

  # 2. spel
  - cd $ROOT/spel/
  - pwd
  - bash gradlew clean build

  - bash gradlew composeUp
  - sudo mkdir -p /var/spel-app
  - sudo mv -f ./app/build/libs/*.jar /var/spel-app/spel-app.jar
  - sudo ln -s /var/spel-app/spel-app.jar /etc/init.d/spel-app
  - sudo service spel-app start
  - sleep 20
  - curl -sS localhost:8080/all | jq
  - curl -sS localhost:8080/names | jq
  - sudo service spel-app stop
  - bash gradlew --stop

  # 1. redis
  - cd $ROOT/redis/
  - pwd
  - bash gradlew clean build

  # redis: docker
  - docker-compose -f ./docker/src/docker-compose.yml up -d --build
  - docker-compose -f ./docker/src/docker-compose.yml down -v

  # redis: manual redis-app tests
  - bash gradlew composeUp
  - sudo mkdir -p /var/redis-app
  - sudo mv -f ./redis/build/libs/*.jar /var/redis-app/redis-app.jar
  - sudo ln -s /var/redis-app/redis-app.jar /etc/init.d/redis-app
  - sudo service redis-app start
  - sleep 20
  - curl -sS localhost:8080/redisObjs -H'content-type:application/json' -d'{"data":"test"}' | jq
  - curl -sS localhost:8080/redisObjs | jq
  - sudo service redis-app stop
  - bash gradlew composeDown

  # redis: manual embedded-redis-app tests
  - sudo mkdir -p /var/embedded-redis-app
  - sudo mv -f ./embedded-redis/build/libs/*.jar /var/embedded-redis-app/embedded-redis-app.jar
  - sudo ln -s /var/embedded-redis-app/embedded-redis-app.jar /etc/init.d/embedded-redis-app
  - sudo service embedded-redis-app start
  - sleep 30
  - curl -sS localhost:8082/embeddedRedisObjs -H'content-type:application/json' -d'{"data":"test-embedded"}' | jq
  - curl -sS localhost:8082/embeddedRedisObjs | jq
  - sudo service embedded-redis-app stop
  - bash gradlew --stop

before_cache:
  - rm -rf $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -rf $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.m2/
    - $HOME/.gradle/
