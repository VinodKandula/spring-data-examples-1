service:
- docker

language: java
jdk: oraclejdk8

addons:
  apt:
    update: true
    packages:
    - docker-ce
    - bash
    - curl
    - jq
    - libxml2-utils
    - python-pip
    - google-chrome-stable

install: true
before_install:
- sudo pip install docker-compose httpie >/dev/null 2>&1
- source <(curl -fsSL https://raw.github.com/daggerok/bash-functions/master/main.bash)
- stop_any 5672 5432 27017 9200 9300 5601 8001 8002 8080 80

script:
- bash gradlew clean build asciidoctor
- export root=$(pwd)

# redis-store
- cd $root/redis-store
- bash gradlew clean installDist >/dev/null 2>&1
- bash lettuce/build/install/lettuce/bin/lettuce
- bash mvnw >/dev/null 2>&1
- java -jar lettuce/target/*-all.jar

# infinispan-example plain
- cd $root/infinispan-example
- bash mvnw >/dev/null 2>&1
- bash gradlew >/dev/null 2>&1
- java -jar ./infinispan-service/build/libs/*.jar &
- java -jar ./infinispan-service/target/*.jar --server.port=8000 &
- wait_for 8080 8000
- http :8080
- http :8080 message=ololo\ 1
- http :8080 message=trololo\ 1
- http :8080/all
- http :8000
- http :8000 message=ololo-2
- http :8000 message=trololo-2
- http :8000/all
- stop_any 8080 8000
# infinispan-example docker
- docker-compose -f docker-compose-maven.yaml build --force-rm --no-cache --pull >/dev/null 2>&1
- docker-compose -f docker-compose-maven.yaml up --force-recreate --remove-orphans &
- sleep 30
- http :8080
- http :8080 message=ololo
- http :8080 message=trololo
- http :8080/all
- docker-compose -f docker-compose-maven.yaml down -v
# infinispan-example gradle docker
- bash gradlew composeUp >/dev/null 2>&1
- http :8080
- http :8080 message=ololo
- http :8080 message=trololo
- http :8080/all
- bash gradlew composeDown

# spring-data-history-audit
- cd $root/spring-data-history-audit
- bash mvnw >/dev/null 2>&1
- bash gradlew >/dev/null 2>&1
- docker-compose build --force-rm --no-cache --pull >/dev/null 2>&1
- docker-compose up --force-recreate --remove-orphans &
- sleep 30
- http put :8080/my-entities/1 value=ololo
- http put :8080/my-entities/1 value=trololo
- http put :8080/my-entities/1 value=ho-ho-ho
- http get :8080/my-entities
- http get :8080/my-entities-history
- docker-compose down -v

- >
  for path in \
    spring-data-hazelcast \
    key-value-hazelcast \
    shadov \
    key-value \
  ; do

    cd $root/$path
    bash gradlew clean build -Ddocker=compose-travis >/dev/null 2>&1

  done;

# 7. spring-data-hazelcast
- cd $root/spring-data-hazelcast
- bash gradlew assemble >/dev/null 2>&1
- bash gradlew bootRun &
- sleep 30
- http :8080
- http :8080/not-found
- http http :8080/any/ma
- http post :8080 name=Maximus username=xxx
- http :8080/any/Ma
- stop_any 8080 8080 80

# 6. key-value-hazelcast
- cd $root/key-value-hazelcast
- bash gradlew assemble >/dev/null 2>&1
- bash gradlew bootRun &
- sleep 25
- http :8080
- http :8080/not-found
- http :8080/ name=max1
- http post :8080/max2
- http :8080/
- stop_any 8080 8080 80

# 5. key-value
- cd $root/key-value
- bash gradlew assemble >/dev/null 2>&1
- bash gradlew bootRun &
- sleep 15
- curl http://localhost:8080/ | jq
- stop_any 8080 8080 80

# 4. elastic
- cd $root/elastic
- bash gradlew assemble composeUp -Ddocker=compose-travis-all >/dev/null 2>&1
- curl http://localhost/
- curl http://localhost:8001/
- curl http://localhost:8001/users
- curl -u elastic:changeme http://localhost:9200/_cat/health
- bash gradlew composeDown -Ddocker=compose-travis-all

# 3. querydsl:
- cd "$ROOT/querydsl"
- bash gradlew clean test build

# querydsl: test and build
- docker-compose -f soaptest/rest-service/src/docker/docker-compose.yml up -d --build
- docker-compose -f soaptest/rest-service/src/docker/docker-compose.yml down -v
- docker-compose -f soaptest/ws-service/src/docker/docker-compose.yml up -d --build
- docker-compose -f soaptest/ws-service/src/docker/docker-compose.yml down -v

# querydsl: run rest
- bash gradlew :docker:dockerUp >/dev/null 2>&1
- sudo mkdir -p /var/rest-service
- sudo mv -f services/rest-service/build/libs/*.jar /var/rest-service/rest-service.jar
- sudo ln -s /var/rest-service/rest-service.jar /etc/init.d/rest-service
- sudo service rest-service start

# querydsl: manual rest api tests
- sleep 15
- curl -sS localhost:8080/api/v1/domains | jq
- curl -sS localhost:8080/api/v2/flatten/2 | jq
- curl -sS localhost:8080/api/v2/flatten | jq
- curl -sS localhost:8080/api/v2/sorted\?sort=id,desc | jq
- curl -sS localhost:8080/api/v2/pagination\?page=0\&size=1\&sort=first.firstField1,desc | jq
- curl -sS localhost:8080/api/v3/predicate | jq
- curl -sS localhost:8080/api/v3/predicate\?second.secondField1=1 | jq
- curl -sS localhost:8080/api/v3/predicate\?createdDate=$(date +%Y-%m-%d) | jq
- curl -sS localhost:8080/api/v4/engineers | jq
- curl -sS localhost:8080/api/v4/engineers\?size=2\&page=0\&sort=username,desc | jq
- curl -sS localhost:8080/api/v4/engineers/any\?emails=u1@com,u3@mail.com | jq
- curl -sS localhost:8080/api/v4/engineers/any\?emails=u3@mail.com,u2.1@mail.com | jq
- curl -sS localhost:8080/rest/domains -H'content-type:application/json' -d '{"firstName":"1","lastName":"1","username":"1"}' | jq '._links.self'
- curl -sS localhost:8080/rest/domains -H'content-type:application/json' -d '{"firstName":"2","lastName":"2","username":"2"}' | jq '._links.self'
- curl -sS localhost:8080/rest/otherDomains -H'content-type:application/json' -d '{"test":"1"}' | jq '._links.self'
- curl -sS localhost:8080/rest/histories | jq '.page.totalElements'
- curl -sS localhost:8080/rest/engineers -H'content-type:application/json' -d '{"username":"tttest"}' | jq '._links.self'
- curl -sS localhost:8080/rest/histories | jq '.page.totalElements'
- curl -sS localhost:8080/api/v5/engineers/page-info -H'accept:application/json' | jq
- curl -sS localhost:8080/api/v6 | jq
- curl -sS localhost:8080/api/v6/catalog | jq
- curl -sS localhost:8080/api/v6/catalog\?size=1 | jq
- curl -sS localhost:8080/api/v6/enum-collection/TEST_ENTITY_1 | jq
- curl -sS localhost:8080/api/v6/enum-collection/TEST_ENTITY_2 | jq
- curl -sS localhost:8080/api/v6/enum-collection/not-found | jq
- curl -sS localhost:8080/api/v6/map-catalog/type/not-found | jq
- curl -sS localhost:8080/api/v6/map-catalog/type/TEST_ENTITY_2 | jq
- curl -sS localhost:8080/api/v6/map-catalog/status/NOK | jq
- curl -sS localhost:8080/api/v6/map-catalog/status/OK | jq
- curl -sS localhost:8080/api/v6/map-catalog/status/OK\?size=1 | jq
- curl -sS localhost:8080/api/v6/jpa-enum | jq
- curl -sS localhost:8080/api/v6/jpa-enum\?size=1 | jq
- sudo service rest-service stop
- bash gradlew :docker:dockerDown

# querydsl: run ws
- bash gradlew :docker:dockerUp >/dev/null 2>&1
- sudo mkdir -p /var/ws-service
- sudo mv -f services/ws-service/build/libs/*.jar /var/ws-service/ws-service.jar
- sudo ln -s /var/ws-service/ws-service.jar /etc/init.d/ws-service
- sudo service ws-service start
- sleep 15
- curl --header "content-type:text/xml" -d @services/ws-service/src/test/resources/request.xml http://localhost:8080/ws | xmllint --format -
- sudo service ws-service stop
- bash gradlew :docker:dockerDown

# querydsl: run SoapUI tests
- bash gradlew clean assemble soaptestRest soaptestWs
- bash gradlew clean assemble testrunner
- bash gradlew --stop

# 2. spel
- cd $root/spel/
- pwd
- bash gradlew
- bash gradlew composeUp
- sudo mkdir -p /var/spel-app
- sudo mv -f ./app/build/libs/*.jar /var/spel-app/spel-app.jar
- sudo ln -s /var/spel-app/spel-app.jar /etc/init.d/spel-app
- sudo service spel-app start
- sleep 10
- wait_for 8080
- curl -sS localhost:8080/all | jq
- curl -sS localhost:8080/names | jq
- sudo service spel-app stop
- bash gradlew --stop

# 1. redis
- cd $root/redis/
- pwd
- bash gradlew clean build >/dev/null 2>&1

# redis: docker
- docker-compose -f ./docker/src/docker-compose.yml up -d --build
- docker-compose -f ./docker/src/docker-compose.yml down -v

# redis: manual redis-app tests
- bash gradlew composeUp >/dev/null 2>&1
- sudo mkdir -p /var/redis-app
- sudo mv -f ./redis/build/libs/*.jar /var/redis-app/redis-app.jar
- sudo ln -s /var/redis-app/redis-app.jar /etc/init.d/redis-app
- sudo service redis-app start
- sleep 20
- curl -sS localhost:8080/redisObjs -H'content-type:application/json' -d'{"data":"test"}' | jq
- curl -sS localhost:8080/redisObjs | jq
- sudo service redis-app stop
- bash gradlew composeDown

# redis: manual embedded-redis-app tests
- sudo mkdir -p /var/embedded-redis-app
- sudo mv -f ./embedded-redis/build/libs/*.jar /var/embedded-redis-app/embedded-redis-app.jar
- sudo ln -s /var/embedded-redis-app/embedded-redis-app.jar /etc/init.d/embedded-redis-app
- sudo service embedded-redis-app start
- sleep 30
- curl -sS localhost:8082/embeddedRedisObjs -H'content-type:application/json' -d'{"data":"test-embedded"}' | jq
- curl -sS localhost:8082/embeddedRedisObjs | jq
- sudo service embedded-redis-app stop
- bash gradlew --stop

env:
  global:
  - TERM=dumb
  - secure: N19h/iVKmx9lY4zvTdp3idPJWe06oJMNEkllLc3A//UsU570kYxYP5uy1Dn/eTvK6sqvTQKuv6p8mg4KbR8mOexxuXm009IA5m4Y1cKbnlIWZsFaHxsXZuBFFnFes8Zh1Kscs3ak8DCVnxzUxI/gb1M4aUAUoOgaeoQm1Y9YRjPMWJ7Lll3hf7lRcUrsSyNbMsRFSZT3Ktiq2POvbVnXVZ2HajTntmFLjKajjDeNVSVU+OkjqeuzyFfYgIuENnr0JGjhDYtS4NTa+Rn66OKT6hZGYzkxy2MkYaYlXNplv9L1J4zeWxD1w0c6s3kCTEY6Hbj9sYySdl9WfyVgErQmeURGzJ23F6SfFyBYWYpcbNqd0toCkzGMGSnzyCA4IG3HgbKekTiQjPbzRfHed6MP35g33mQo00JQ9B1duMtbdGyywOyM8WQJunq31pXraqqkX4nM8Ias46bevPvTs3g08/LPs2ZITChThvtr/LVjFs5Ahyvf1Yencg/MbVW6uRyw3GzsTQc2/tsMB+9Y4igx4O2VuCxmxqnzYISquRS2af8G+HZnR7MfhQaZtyxtHqpjIC8e7mUjyW38BlD76hpUk6cZoLp0ysw0e7DRMgGJL41P+jbeweehKQpEyGfdAJKvYlJ0qPM6pT+tNGpoHlvShEJ6mFmgTrDoXfQh+MPAuZ0=

before_deploy:
- cd $root/
- ./gradlew documentation

deploy:
  provider: pages
  skip-cleanup: true
  # travis encrypt GITHUB_TOKEN=<your github repo token> --add
  github-token: "$GITHUB_TOKEN"
  keep-history: true
  on:
    branch: master
  local-dir: target/generated-docs
  target_branch: gh-pages

before_cache:
- sudo rm -rf $HOME/.gradle/caches/*/fileHashes/fileHashes.bin
- sudo rm -rf $HOME/.gradle/caches/*/fileHashes/fileHashes.lock
- sudo rm -rf $HOME/.gradle/caches/modules-2/modules-2.lock

cache:
  directories:
  - $HOME/.m2
  - $HOME/.gradle
  - $HOME/.docker
